

CREATE COMPUTE MODULE obterProdutosRegionaisSGT_preparaResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
		IF InputRoot.JSON.Data.ProdutosRegionais.ProdutoRegional.idProdutoRegional IS NOT NULL THEN
			SET Environment.Variables.SGTProdutoRegional = InputRoot.JSON.Data.ProdutosRegionais.ProdutoRegional;
			
			SET Environment.Variables.etapa.status = 'Concluido';
			SET Environment.Variables.etapa.sucesso = true;		
		ELSE
			SET Environment.Variables.etapa.status = 'Falha';
			SET Environment.Variables.etapa.sucesso = false;	
			
			CALL br.org.fiep.esb.utils.v1.throw('EN:401', 'Produto n√£o encontrado no SGT: ' || Environment.Variables.CRMcodigoIntegracaoProdutoRegional || -- TODO
									' Contrato: ' || Environment.Variables.CRMcontratoResult.codigoContratoCTR ||
										' Unidade: ' || Environment.Variables.CRMcontratoResult.codUnidadeOp, BrokerName);
					
		END IF;	
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
