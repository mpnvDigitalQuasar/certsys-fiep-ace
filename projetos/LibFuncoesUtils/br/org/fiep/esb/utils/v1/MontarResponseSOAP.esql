BROKER SCHEMA br.org.fiep.esb.utils.v1


CREATE COMPUTE MODULE MontarResponseSOAP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputLocalEnvironment = InputLocalEnvironment;
		
		DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
		SET OutputRoot.SOAP.Context.Namespace.(SOAP.NamespaceDecl)xmlns:soapenv = 'http://schemas.xmlsoap.org/soap/envelope/';
		
		IF EXISTS(InputRoot.JSON.Data.[]) AND Environment.Variables.Error.application IS NULL THEN
		   SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = InputRoot.JSON.Data.httpCode;	
		   SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = InputRoot.JSON.Data.httpMessage;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.code = InputRoot.JSON.Data.error.code;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = InputRoot.JSON.Data.error.message;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.application = InputRoot.JSON.Data.error.application;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.exception = InputRoot.JSON.Data.error.exception;
		   IF Environment.Monitoring.EventCorrelation.localTransactionId IS NOT NULL THEN
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.localTransactionId  = Environment.Monitoring.EventCorrelation.localTransactionId;
		   ELSE
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.localTransactionId  = '';
		   END IF;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.localTransactionDate = converterDatetime(CURRENT_TIMESTAMP);
		ELSE
		   DECLARE codeError CHAR Environment.Variables.Error.code;
		
		   DECLARE sql CHAR 'SELECT  M.codeError, 
		                             M.messageError, 
		                             M.status, 
		                             M.creationDate, 
		                             HC.httpCode, 
		                             HC.httpMessage 
                         FROM IIB_MESSAGE_ERROR_TYPE AS M
                          INNER JOIN IIB_HTTP_CODE AS HC ON HC.httpCode = M.httpCode
							WHERE 	M.codeError = ''' || codeError ||'''';
										 	
		   SET Environment.Variables.Error.messageErrorTable[] = PASSTHRU(sql);		
				
		   SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = CAST(Environment.Variables.Error.messageErrorTable.httpCode AS INT);	
				
		   SET OutputRoot.SOAP.Body.soapenv:Fault.faultcode = Environment.Variables.Error.messageErrorTable.httpCode;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.faultstring = Environment.Variables.Error.messageErrorTable.httpMessage;
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.code = Environment.Variables.Error.messageErrorTable.codeError;
				
		   IF Environment.Variables.Error.field IS NOT NULL THEN
		      IF codeError = 'ET:001' THEN
		         SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError || Environment.Variables.Error.field;
		      ELSE
		   	     SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError || Environment.Variables.Error.field;
		   	     IF Environment.Variables.Error.value IS NOT NULL THEN
		   	  	    SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError || Environment.Variables.Error.value;
		   	     END IF;
		       END IF;		   	  
		   ELSEIF Environment.Variables.Error.application IS NOT NULL THEN
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError || Environment.Variables.Error.application;
		   ELSE
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError; 	
		   END IF;
		
		   --monta resposta no caso de erro no banco
		   IF Environment.Variables.Error.banco IS NOT NULL THEN
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError || Environment.Variables.Error.banco; 
		   END IF;
		
		   IF Environment.Variables.Error.messageError IS NOT NULL THEN
			  SET OutputRoot.SOAP.Body.soapenv:Fault.detail.message = Environment.Variables.Error.messageErrorTable.messageError || Environment.Variables.Error.messageError;
		   END IF;
		
		   IF Environment.Variables.Error.application IS NOT NULL THEN
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.application = Environment.Variables.Error.application;
		   ELSE
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.application = BrokerName;
		   END IF;
		
		   -- erro desconhecido retorna a exceptionList para analise do problema
		   IF codeError = 'EP:999' THEN
		      CREATE LASTCHILD OF Environment.Variables DOMAIN 'XMLNSC' NAME 'ExceptionList';
		      SET Environment.Variables.ExceptionList = InputExceptionList;
		   	
		      DECLARE Exception_BLOB BLOB ASBITSTREAM(Environment.Variables.ExceptionList CCSID 1208 ENCODING 546);
		      DECLARE Exception_CHAR CHAR CAST(Exception_BLOB AS CHAR CCSID 1208 ENCODING 546);
		   
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.exception = Exception_CHAR;
		   ELSE
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.exception = '';    
		   END IF;	
		   
		   IF Environment.Monitoring.EventCorrelation.localTransactionId IS NOT NULL THEN
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.localTransactionId  = Environment.Monitoring.EventCorrelation.localTransactionId;
		   ELSE
		      SET OutputRoot.SOAP.Body.soapenv:Fault.detail.localTransactionId  = '';
		   END IF;
		   
		   SET OutputRoot.SOAP.Body.soapenv:Fault.detail.localTransactionDate = converterDatetime(CURRENT_TIMESTAMP);
		END IF;
		
		SET OutputLocalEnvironment.Destination.SOAP.Reply.Transport.HTTP.ReplyStatusCode = 500;
        SET Environment.Variables.isExecutionError = TRUE;
        
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
