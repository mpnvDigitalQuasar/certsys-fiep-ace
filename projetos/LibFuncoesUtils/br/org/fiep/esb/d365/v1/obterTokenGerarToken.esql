BROKER SCHEMA br.org.fiep.esb.d365.v1

CREATE COMPUTE MODULE obterTokenGerarToken
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE env REFERENCE TO Environment;
		
		DECLARE resource CHARACTER ;
		DECLARE clientId CHARACTER ;
		DECLARE clientSecret CHARACTER ;
		DECLARE urlLogin CHARACTER ;						
			
		IF BrokerName = 'BRK01' THEN
		   PROPAGATE TO TERMINAL 'out1';
		   SET env.Variables.sistema = 'ERP';
		ELSEIF BrokerName = 'IN_PRD01' THEN
		    SET resource = 'https://erpsistemafiep.operations.dynamics.com';
			SET clientId = 'ad357dcc-135d-4693-91fe-6e62e1f584f5';
			SET clientSecret = 'gGq8Q~vosSgrtxpGBOwRby1HY~IMot2KZFpzRaxw';
			SET urlLogin = 'https://login.windows.net/sistemafiep.onmicrosoft.com/oauth2/token';						
			SET env.Variables.sistema = 'ERP';
			CALL br.org.fiep.esb.utils.gerarToken(resource, clientId, clientSecret, urlLogin, env);	
		ELSEIF BrokerName = 'IN_HMG01' THEN
		    SET resource = 'https://fiephomolog.sandbox.operations.dynamics.com';
			SET clientId = 'e5f16d37-a7bd-452a-a2b5-e6ece53fb160';
			SET clientSecret = 'YGb8Q~fb1sG4H1E7DXTK7DrL-M6MiXzC9tp8mbg8';
			SET urlLogin = 'https://login.windows.net/sistemafiep.onmicrosoft.com/oauth2/token';						
			SET env.Variables.sistema = 'ERP';
			CALL br.org.fiep.esb.utils.gerarToken(resource, clientId, clientSecret, urlLogin, env);	  
		ELSE
		   
		    SET resource = 'https://fiep-devsb-v072023a57a3be481a63c0caos.cloudax.dynamics.com';
			SET clientId = '61124478-93da-4972-bb49-a24118166133';
			SET clientSecret = '3Oo8Q~6Xe7islAnfUJIG_HKLjcZv4jrmJqcUzavh';
			SET urlLogin = 'https://login.windows.net/sistemafiep.onmicrosoft.com/oauth2/token';						
			SET env.Variables.sistema = 'ERP';
			CALL br.org.fiep.esb.utils.gerarToken(resource, clientId, clientSecret, urlLogin, env);	
		
		END IF;
		
		CREATE LASTCHILD OF OutputRoot NAME 'HTTPInputHeader';
		SET OutputRoot.HTTPInputHeader."Authorization" = env.Variables.Authorization;
		
		IF COALESCE(FIELDNAME(InputRoot.JSON), '') <> '' THEN
		   SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
		END IF;
		SET OutputLocalEnvironment = InputLocalEnvironment;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
