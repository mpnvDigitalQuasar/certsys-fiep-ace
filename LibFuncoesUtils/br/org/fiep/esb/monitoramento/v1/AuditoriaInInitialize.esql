BROKER SCHEMA br.org.fiep.esb.monitoramento.v1
PATH br.org.fiep.esb.utils.v1;

CREATE COMPUTE MODULE AuditoriaInInitialize
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		SET Environment.Variables.formato = 'REST';
		SET Environment.Variables.eventName = 'API INPUT'; 
	    SET Environment.Variables.globalTransactionId = InputLocalEnvironment.REST.Input.Parameters.globalTransactionId;
		SET Environment.Variables.parentTransactionId = InputLocalEnvironment.REST.Input.Parameters.parentTransactionId;
		
		IF COALESCE(FIELDNAME(InputRoot.XMLNSC), '') <> '' THEN
		   -- A requisicao Ã© SOAP
		   SET Environment.Variables.formato = 'SOAP';
		   SET Environment.Variables.eventName = 'WS INPUT';
		   SET Environment.Variables.globalTransactionId = InputRoot.XMLNSC.[>1].globalTransactionId;
		   SET Environment.Variables.parentTrasactionId = InputRoot.XMLNSC.[>1].parentTrasactionId;
		END IF;	
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
