
BROKER SCHEMA br.org.fiep.esb.token.v1

CREATE COMPUTE MODULE mantemTokenACE
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		DECLARE dataRecebimento CHARACTER;

		SET OutputRoot.JSON.Data.sistema = Environment.Variables.sistema;
		SET OutputRoot.JSON.Data.resource = InputRoot.JSON.Data.resource;
		SET OutputRoot.JSON.Data.clientId = Environment.Variables.user;
		--convers√£o de long pata timestamp
		SET dataRecebimento = br.org.fiep.esb.utils.v1.gerarData(InputRoot.JSON.Data.expires_on);

		SET OutputRoot.JSON.Data.expiresOn = dataRecebimento;
		--SET OutputRoot.JSON.Data.accessToken = CAST(InputRoot.JSON.Data.access_token as char CCSID 1208);
		SET OutputRoot.JSON.Data.accessToken = InputRoot.JSON.Data.access_token;
		SET OutputRoot.JSON.Data.tokenType = InputRoot.JSON.Data.token_type;


		DECLARE jsonBlob1 BLOB;
		DECLARE JSON CHAR;
		DECLARE options1 INTEGER BITOR(FolderBitStream, ValidateNone);
		SET jsonBlob1 = ASBITSTREAM(OutputRoot.JSON.Data,,1208,,,,options1);
		SET JSON = CAST(jsonBlob1 AS CHAR ENCODING 1208);
		DECLARE result row;
		CALL insert_token(JSON, result.Item[]);
		COMMIT;
		DELETE FIELD OutputRoot.JSON;
		SET Environment.Variables.idTokenBroker = result.Item.idTokenBroker;		
		
		SET Environment.Variables.token = 'Bearer ' || InputRoot.JSON.Data.access_token;

		RETURN TRUE;
	END;

	CREATE PROCEDURE insert_token(IN json CHAR)
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "dbo.MKP_ECOM_SP_INS_TOKEN";

END MODULE;