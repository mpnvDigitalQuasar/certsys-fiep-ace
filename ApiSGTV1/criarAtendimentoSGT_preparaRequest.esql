
DECLARE criarAtendimentoToken EXTERNAL CHAR '';
CREATE COMPUTE MODULE criarAtendimentoSGT_preparaRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		DELETE FIELD Environment.Variables.idEtapa;
		SET Environment.Variables.etapa.nome = 'Inserir Atendimento SGT';
		SET Environment.Variables.etapa.status = 'Em processamento';

		PROPAGATE TO LABEL 'lbRegistrarEtapas' DELETE NONE;
		
		SET OutputRoot.HTTPRequestHeader."Accept" = 'application/json';  
		SET OutputRoot.HTTPRequestHeader."Authorization" = 'Bearer ' || criarAtendimentoToken;
		
		SET OutputRoot.JSON.Data = InputRoot.JSON.Data;
--		SET OutputRoot.JSON.Data.dataEmissao = Environment.Variables.CRMcontratoResult.dataInicioContrato;
--		SET OutputRoot.JSON.Data.dataInicioPrevista = CURRENT_TIMESTAMP;
--		SET OutputRoot.JSON.Data.dataConclusaoPrevista = Environment.Variables.CRMcontratoResult.dataTerminoContrato;
--		SET OutputRoot.JSON.Data.codigoIntegracaoAtendimento = Environment.Variables.codigoIntegracaoAtendimento;
--		SET OutputRoot.JSON.Data.idProposta = Environment.Variables.SGTproposta.idProposta;
--		SET OutputRoot.JSON.Data.cliente = Environment.Variables.CRMcnpjCpf;
--		SET OutputRoot.JSON.Data.idProdutoRegional = Environment.Variables.SGTProdutoRegional.idProdutoRegional;
--		SET OutputRoot.JSON.Data.isEscopoIndefinido = Environment.Variables.linhaContrato.isEscopoIndefinido;
--		SET OutputRoot.JSON.Data.isValorHora = Environment.Variables.linhaContrato.isValorHora;
--		SET OutputRoot.JSON.Data.numeroDeProducaoEstimada = Environment.Variables.linhaContrato.numeroProducaoEstimada;
--		SET OutputRoot.JSON.Data.numeroDeRelatorioEstimado = Environment.Variables.linhaContrato.numeroDeRelatorioEstimado;
--		SET OutputRoot.JSON.Data.titulo = Environment.Variables.tituloAtendimento;
--		SET OutputRoot.JSON.Data.unidade = Environment.Variables.linhaContrato.unidade;
--		SET OutputRoot.JSON.Data.vlrEconomico = Environment.Variables.linhaContrato.vlrEconomico;
--		SET OutputRoot.JSON.Data.vlrFinanceiro = Environment.Variables.linhaContrato.vlrFinanceiro;
--
--		DECLARE I INT 1;
--		FOR current AS Environment.Variables.x.y.Item[] DO
--			SET OutputRoot.JSON.Data.previsaoReceitaList.Item[I].cpfcnpj = Environment.Variables.linhaContrato.previsoesReceitas.previsaoReceita.cpfCnpj;
--			SET OutputRoot.JSON.Data.previsaoReceitaList.Item[I].tipoPrevisaoReceita = Environment.Variables.linhaContrato.previsoesReceitas.previsaoReceita.tipoPrevisaoReceita;
--			SET OutputRoot.JSON.Data.previsaoReceitaList.Item[I].valor = Environment.Variables.linhaContrato.previsoesReceitas.previsaoReceita.valor;
--			SET I = I + 1;
--		END FOR;
						
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
