

BROKER SCHEMA br.org.fiep.esb.appsgt


CREATE COMPUTE MODULE processarContratoAsync_orquestradorAtendimento
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- Iniciando o processamento de atendimentos
		DECLARE codigoIntegracaoAtendimentoAux CHAR '';
		SET codigoIntegracaoAtendimentoAux = CAST(Environment.Variables.CRMcontratoResult.codCasa AS CHAR) || '-' || Environment.Variables.CRMcontratoResult.codUnidadeOp || '-' || Environment.Variables.CRMcontratoResult.codigoContratoCTR;

		DECLARE fimAtendimento BOOLEAN false;
		DECLARE etapa INT 1;

		FOR current AS Environment.Variables.CRMcontratoResult.linhasDeContrato.Item[] DO

			SET fimAtendimento = false;

				
			DECLARE codigoIntegracaoAtendimento CHAR '';
			SET codigoIntegracaoAtendimento = codigoIntegracaoAtendimentoAux || current.codigoProduto;

			DECLARE refContrato REFERENCE TO Environment.Variables.CRMcontratoResult;

			SET Environment.Variables.codigoIntegracaoPropostaSGT = CAST(refContrato.codCasa AS CHAR) || CAST(refContrato.codUnidadeOp AS CHAR) || CAST(refContrato.codigoContratoCTR AS CHAR) || CAST(current.codigoProduto AS CHAR);			 


			fimAtendimento: REPEAT
				
				-- MUDAR PARA CASE	
				CASE
					-- Consultando Atendimento
					WHEN etapa = 1  THEN 
							
						-- Consultando atendimento no SGT
						PROPAGATE TO LABEL 'lbObterAtendimentoSGT';							-- Consultando atendimento no SGT
						
						-- PARA EM CASO DE FALHA IR PARA O PRÓXIMO CONTRATO
						SET fimAtendimento = Environment.Variables.fimAtendimento;
						
						IF fimAtendimento = true THEN 										-- Valida mudança de valor para casos de erro
							LEAVE fimAtendimento;	
						
						ELSEIF InputRoot.JSON.Data.idAtendimento = 0 THEN 					-- Atendimento encontrado no SGT
							
							SET Environment.Variables.SGTidAtendimento = InputRoot.JSON.Data.idAtendimento;
							SET Environment.Variables.SGTatendimentoStatus = InputRoot.JSON.Data.atendimentoStatus;
							
							SET etapa = 2; -- Buscar Produto Regional no SGT	
					
						ELSEIF InputRoot.JSON.Data.status = 'negociacao' THEN
							SET etapa = 4; -- Alterar Status Atendimento aceito		
						
						ELSE
							SET fimAtendimento = true;
							SET etapa = NULL;
							
							IF fimAtendimento = true THEN
								LEAVE fimAtendimento;	
							END IF;	
						END IF;	
					
					-- Buscar produto Regional no SGT	
					WHEN etapa = 2  THEN 
						
						PROPAGATE TO LABEL 'lbObterProdutoRegionaisSGT'; 					-- Buscar Produto Regional no SGT

						-- PARA EM CASO DE FALHA IR PARA O PRÓXIMO CONTRATO
						SET fimAtendimento = Environment.Variables.fimAtendimento;
						
						IF fimAtendimento = true THEN 										-- Valida mudança de valor para casos de erro
							LEAVE fimAtendimento;	
					
						ELSEIF Environment.Variables.getProdutoRegional IS NOT NULL THEN 	-- Cadastrar Atendimento no SGT			
							SET etapa = 3;
						
						ELSE 																-- Passa para o proximo
							SET fimAtendimento = true;
							SET etapa = NULL;
							
							IF fimAtendimento = true THEN
								LEAVE fimAtendimento;	
							END IF;		
						END IF;
												
					-- Cadastrar o Atendimento no SGT
					WHEN etapa = 3  THEN 
					
						PROPAGATE TO LABEL 'lbCriarAtendimentoSGT'; 						-- Cadastrar o Atendimento no SGT
						
						-- PARA EM CASO DE FALHA IR PARA O PRÓXIMO CONTRATO
						SET fimAtendimento = Environment.Variables.fimAtendimento;
						
						IF fimAtendimento = true THEN 										-- Valida mudança de valor para casos de erro
							LEAVE fimAtendimento;	
						ELSEIF InputRoot.JSON.Data.idAtendimento <> 0 THEN 					-- Consultar Atendimento				
							SET etapa = 1;
						ELSE																-- Passa para o proximo
							SET fimAtendimento = true;
							SET etapa = NULL;
							
							IF fimAtendimento = true THEN
								LEAVE fimAtendimento;	
							END IF;	
						END IF;
						
					-- Alterar Status do Atendimento no SGT para Aceito
					WHEN etapa = 4  THEN 
						
						SET OutputRoot.JSON.Data.dataEmissao = Environment.Variables.CRMcontratoResult.dataInicioContrato;
						SET OutputRoot.JSON.Data.dataInicioPrevista = CURRENT_DATE;
						SET OutputRoot.JSON.Data.dataConclusaoPrevista = Environment.Variables.CRMcontratoResult.dataTerminoContrato;
						SET OutputRoot.JSON.Data.codigoIntegracaoAtendimento = Environment.Variables.CRMcontratoResult.cnpjCliente;
						SET OutputRoot.JSON.Data.idProposta = Environment.Variables.idProposta;
						SET OutputRoot.JSON.Data.cliente = Environment.Variables.CRMcontratoResult.cnpjCliente;
						SET OutputRoot.JSON.Data.idProdutoRegional = Environment.Variables.idProdutoRegional;
						SET OutputRoot.JSON.Data.isEscopoIndefinido = current.isEscopoIndefinido;
						SET OutputRoot.JSON.Data.isValorHora = current.isValorHora;
						SET OutputRoot.JSON.Data.numeroDeProducaoEstimada = current.numeroDeProducaoEstimada;
						SET OutputRoot.JSON.Data.numeroDeRelatorioEstimado = current.numeroDeRelatorioEstimado;
						SET OutputRoot.JSON.Data.titulo = current.titulo;
						SET OutputRoot.JSON.Data.unidade = current.unidade;
						SET OutputRoot.JSON.Data.vlrEconomico = current.vlrEconomico;
						SET OutputRoot.JSON.Data.vlrFinanceiro = current.vlrFinanceiro;
						SET OutputRoot.JSON.Data.previsaoReceitaList.cpfcnpj = current.previsoesReceitas.PrevisaoReceita.cpfCnpj;
						SET OutputRoot.JSON.Data.previsaoReceitaList.tipoPrevisaoReceita = current.previsoesReceitas.PrevisaoReceita.tipoPrevisaoReceita;
						SET OutputRoot.JSON.Data.previsaoReceitaList.valor = current.previsoesReceitas.PrevisaoReceita.valor;
						
						PROPAGATE TO LABEL 'lbAtualizarStatusAtendimentoSGT'; 				-- Alterar Status do Atendimento no SGT para Aceito

						-- PARA EM CASO DE FALHA IR PARA O PRÓXIMO CONTRATO
						SET fimAtendimento = Environment.Variables.fimAtendimento;
						
						IF fimAtendimento = true THEN
							LEAVE fimAtendimento;	
						
						ELSEIF InputRoot.JSON.Data.idAtendimento = 0 THEN 					-- Alterado Status do Atendimento no SGT para aceit						
							SET etapa = 5;
						
						ELSE																-- Falha ao alterar Status do Atendimento no SGT
							SET fimAtendimento = true;
							SET etapa = NULL;
							
							IF fimAtendimento = true THEN
								LEAVE fimAtendimento;	
							END IF;	
						END IF;
					
				WHEN etapa = 5  THEN 														-- Se não ocorreu erro no contrato remove da fila
						
					IF fimAtendimento <> true THEN
						PROPAGATE TO LABEL 'lbRemoverFilaCRM'; 
					ELSE
						SET fimAtendimento = true;
						SET etapa = NULL;
						
						IF fimAtendimento = true THEN
							SET etapa = NULL;
							LEAVE fimAtendimento;	
						END IF;	
					END IF;
						
				END CASE;

				SET fimAtendimento = true;

				UNTIL
					TRUE
			END REPEAT;

		END FOR;

		SET Environment.Variables.status = 'Concluido';
		SET Environment.Variables.sucesso = true;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;