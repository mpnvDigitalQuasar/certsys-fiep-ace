DECLARE ns44 NAMESPACE 'http://tempuri.org/produto/';


CREATE COMPUTE MODULE obterProdutoCRM_prepararResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE retorno BOOLEAN TRUE;
		
		--setar idIntegracao em Environment.Variables.codigoIntegracaoPropostaSGT
		
		IF	InputRoot.SOAP.Body.ns44:GetProdutosResponse.ns44:GetProdutosResult.ns44:quantidade > 0 THEN
			SET Environment.Variables.etapa.status = 'Concluido';
			SET Environment.Variables.etapa.sucesso = 1;	
			
			SET Environment.Variables.retornoCrm = InputRoot.SOAP.Body.ns44:GetProdutosResponse.ns44:GetProdutosResult.ns44:resultados.ns44:ProdutoRetorno;
		ELSE
			--CASO NÃO RETORNE
			IF Environment.Variables.statusCrm = 0 THEN
				SET Environment.Variables.statusCrm = 1;
				
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:token.ns44:User = obterProdutoUser;
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:token.ns44:Password = obterProdutoPass;	
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:token.ns44:Domain = obterProdutoDomain;
				
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:idProduto = Environment.Variables.idRegistro;
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:isRegional = true;
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:status = Environment.Variables.statusCrm; 
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:pagina = 1;
				SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns44:GetProdutos.ns44:quantidade = 10;
				
				SET retorno = TRUE;
				PROPAGATE TO TERMINAL 'out1';
				
			ELSE 
				CALL br.org.fiep.esb.utils.v1.throw('EN:401', 'Produto não encontrado. Id Registro: ' || Environment.Variables.idRegistro, BrokerName);	
			END IF;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
