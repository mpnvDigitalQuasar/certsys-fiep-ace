
DECLARE pathCRMDomain EXTERNAL CHAR '';

CREATE COMPUTE MODULE processarFilaCRMPatch_preparaMsgIn
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();

		SET Environment.Variables.idFila = InputRoot.JSON.Data.idFila;
		SET Environment.Variables.idRegistro = InputRoot.JSON.Data.idRegistro;
		SET Environment.Variables.tipo = InputRoot.JSON.Data.tipo;				

		SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns36:GetContrato.ns36:token.ns36:Domain = pathCRMDomain;

		SET Environment.Variables.tipo = Environment.Variables.tipo;
		SET Environment.Variables.etapa.tipo = Environment.Variables.tipo;	
		
		IF Environment.Variables.tipo = 'CONTRATO' THEN

			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:idIntegracao = Environment.Variables.idFila;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:tipoEntidade = 1; -- CONTRATO
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:processo = 1;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:status = 0;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:pagina = 1;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:quantidade = 1;
			
		ELSEIF Environment.Variables.tipo = 'PRODUTO' THEN
			
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:idIntegracao = Environment.Variables.idFila;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:tipoEntidade = 2; -- PRODUTO
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:processo = 1;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:status = 0;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:pagina = 1;
			SET OutputRoot.XMLNSC.ns5:Envelope.ns5:Body.ns:GetFilaIntegracao.ns:quantidade = 1;
		END IF;

		DELETE FIELD OutputRoot.JSON;
				
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
